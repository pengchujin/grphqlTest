input picInput {
  # ID
  id: ID,
  # 所属二级菜单ID
  childID: ID,
  # 名称
  name: String,
  # 链接
  url: String,
  # 是否首页显示 0 都显示 1 只中文显示 2 英文也显示 3 都不显示
  ifShow: Int,
  # 首页排序 从0开始越大越靠后
  motherList: Int,
  # 二级排序 从0开始越大越靠后
  childList: Int,
  # 是否为长图
  isLong: Boolean,
  # 所属语言
  languageType: Int,
}

# 添加收藏
input collectionInput {
  # ID
  id: ID,
  name: String,
  # scene
  itemId: Int,
  categoryId: Int,
  productIndex: Int,
  tragetProductIndex: Int,
  sortIndex: Int,
  combtIndex: Int,
  pIndex: Int,
  eIndex: Int,
  targetFIndex: Int,
}

input brandPicInput {
  # 添加图片时不用传ID, 修改图片需要传
  id: ID,
  name: String,
  url: String,
  # 排序
  order: Int,
  languageType: Int
}

type Collection {
  # ID
  id: ID,
  name: String,
  # scene
  itemId: Int,
  categoryId: Int,
  productIndex: Int,
  tragetProductIndex: Int,
  sortIndex: Int,
  combtIndex: Int,
  pIndex: Int,
  eIndex: Int,
  targetFIndex: Int,
}
# 品牌型录
type BrandPic {
  id: ID,
  name: String,
  url: String,
  # 排序
  order: Int,
  languageType: Int
}

type multiPic {
  # 英文图片
  enPics: [Pic],
  # 中文图片
  cnPics: [Pic],
  # 所有图皮
  allPics: [Pic]
}

type multiBrandPic {
  # 英文图片
  enPics: [BrandPic],
  # 中文图片
  cnPics: [BrandPic],
  # 所有图皮
  allPics: [BrandPic]
}

# 管理员
type Admin {
  # ID
  id: ID!
  # 用户名
  username: String!
  # jwt
  jwt: String
}

# Vip 用户
type Vip {
  # ID
  id: ID!
  # 用户名
  username: String!
  # jwt
  jwt: String
  # 收藏
  collections: [Collection]
}

# 母菜单
type MotherType {
  # ID
  id: ID!
  # 标题
  title: String,
  # 英文标题
  enTitle: String,
  # 是否显示
  isShow: Boolean,
  # 封面图（长图
  banner: String,
  # 英文 封面图（长图
  enBanner: String,
  # 子菜单
  childTypes: [ChildType],
}

# 子菜单
type ChildType {
  # ID
  id: ID!
  # 标题
  title: String,
  # 英文标题
  enTitle: String,
  # 是否显示
  isShow: Boolean,
  # 服装图片
  pics: [Pic],
}

# 图片 
type Pic {
  # ID
  id: ID!,
  # 所属二级菜单ID
  childID: ID,
  # 名称
  name: String,
  # 链接
  url: String,
  # 是否首页显示
  ifShow: Int,
  # 首页排序 从0开始越大越靠后
  motherList: Int,
  # 二级排序 从0开始越大越靠后
  childList: Int,
  # 是否为长图
  isLong: Boolean,
  # 所属语言
  languageType: Int,
}

# 母菜单所有图片
type MotherPic {
  id: ID!
  title: String,
  isShow: Boolean,
  banner: String,
  pics: multiPic
}

type ChildPic {
  # ID
  id: ID!
  # 标题
  title: String,
  # 英文标题
  enTitle: String,
  # 是否显示
  isShow: Boolean,
  # 服装图片
  pics: multiPic
}
# languageType
# 添加图片 都显示 languageType = 0; 只中文 languageType = 1；只英文 languageType = 2

# 查询
type Query {
  # 获取菜单列表 －１为查询所有
  getTypeList(id: Int): [MotherType]!
  # 获取母菜单所有图片
  getMotherPics(motherID: ID!): MotherPic!
  # 获取子菜单所有图片
  getChildPics(childID: ID!): ChildPic!
  # 获取品牌图片
  getBrandPics: multiBrandPic!
  # 获取所有 Vip 用户
  getAllUsers: [Vip]!
}

type Mutation {
  # 登录
  signin(username: String!, password: String!): Admin!
  # Vip 登录
  vipSignin(username: String!, password: String!): Vip!
  # 添加 Vip 用户
  addVip(username: String!, password: String!): Boolean!
  # 修改 Vip 密码
  modifyVipPassword(vipId: ID!, newPassword: String!): Boolean!
  # 修改密码
  modifyAdminPassword(oldPassword: String!, newPassword: String!): Boolean!
  # 添加母菜单 
  addMotherType(title: String, enTitle: String,  isShow: Boolean!, banner: String, enBanner: String): Boolean!
  # 修改母菜单
  modifyMotherType(id: ID!, title: String, enTitle: String,  isShow: Boolean!, banner: String, enBanner: String): MotherType!
  # 删除母菜单
  deleteMotherType(id: ID!): Boolean!
  # 添加子菜单
  addChildType(title: String, enTitle: String, isShow: Boolean!, motherID: Int!): Boolean!
  # 修改子菜单
  modifyChildType(id: ID!,title: String, enTitle: String, isShow: Boolean!, motherID: Int!): MotherType!
  # 删除子菜单
  deleteChildType(id: ID!): Boolean!
  # 添加图片
  addPic(pics: [picInput]): [Pic]
  # 修改图片
  modifyPic(pics: [picInput]): [Pic]
  # 删除图片
  deletePic(id: ID!): Boolean!
  # 添加品牌图片
  addBrandPic(pics: [brandPicInput]): [BrandPic]
  # 修改品牌图片
  modifyBrandPic(pics: [brandPicInput]): [BrandPic]
  # 删除品牌图片
  deleteBrandPic(id: ID!): Boolean!  
  # 添加收藏
  addCollection(collection: collectionInput!): Boolean!
}
